# ---------- build ----------
FROM node:18-bullseye AS build
WORKDIR /app

# 1) Копіюємо маніфести, показуємо діагностику
COPY package.json ./
COPY package-lock.json* ./
COPY pnpm-lock.yaml* ./
COPY yarn.lock* ./

RUN echo "=== Node/NPM versions ===" && node -v && npm -v || true
RUN echo "=== ls -la /app (before install) ===" && ls -la

# 2) Стійка установка залежностей з fallback
#    - намагаємось npm ci, якщо є package-lock.json
#    - якщо npm ci падає або lock-файл відсутній → npm install
RUN if [ -f package-lock.json ]; then \
      echo "Using npm ci (lockfile found)"; \
      npm ci --no-audit --no-fund --loglevel=verbose || \ 
      (echo 'npm ci failed, falling back to npm install'; \
       npm install --no-audit --no-fund --loglevel=verbose); \
    else \
      echo "No package-lock.json, using npm install"; \
      npm install --no-audit --no-fund --loglevel=verbose; \
    fi

# 3) Копіюємо решту коду (щоб кешувався install)
COPY . .

# 4) Будуємо ТІЛЬКИ клієнт
RUN npm run build

# ---------- runtime ----------
FROM nginx:alpine
COPY nginx.conf /etc/nginx/conf.d/default.conf
# Для Vite білд зазвичай у dist
COPY --from=build /app/dist/spa /usr/share/nginx/html
EXPOSE 80
CMD ["nginx","-g","daemon off;"]
